buildscript {
    ext.kotlin_version = '1.2.10'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.google.com' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    /**
     * Set this to true to create two separate APKs instead of one:
     *   - An APK that only works on ARM devices
     *   - An APK that only works on x86 devices
     * The advantage is the size of the APK is reduced by about 4MB.
     * Upload all the APKs to the Play Store and people will download
     * the correct one based on the CPU architecture of their device.
     */
    enableSeparateBuildPerCPUArchitecture = true

    // If true, also generate a universal APK
    enableUniversalApk = true

    // ABI codes
    abiCodes = ["armeabi-v7a": 1, "x86": 2, "mips": 3, "x86_64": 4, "armeabi": 5, "arm64-v8a": 6]

    keystorePropertiesFile = rootProject.file("keystore.properties")
    keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    compileSdkVersion = 27
    minSdkVersion = 15
    targetSdkVersion = 27
    versionCode = 1
    versionName = "1.0.0"

    // support lib version
    supportLibVersion = "27.0.2"

    // constraint layout version
    constraintLayout = "1.0.2"

    // multidex
    multidexVersion = "1.0.2"

    // GSON Version
    gsonVersion = "2.8.2"

    // dagger
    daggerVersion = "2.14.1"

    // room Version
    roomVersion = "1.0.0"

    // rx kotlin
    rxKotlinVersion = "2.2.0"

    // rx android
    rxAndroid = "2.0.1"

    // retrofit
    retrofitVersion = "2.3.0"
    retrofitAdapterVersion = "2.3.0"

    //anko
    anko_version = "0.10.4"

    // mockito version
    mockitoVersion = "2.13.0"

    // junit
    jUnitVersion = "4.12"

    // espresso
    espressoCore = "3.0.1"

    // test runner version
    testRunner = "1.0.1"
}
